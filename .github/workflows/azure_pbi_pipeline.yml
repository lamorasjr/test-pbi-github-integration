name: Build Datasets

on:
  workflow_dispatch:

jobs:
  build-datasets:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        path: self

    - name: Download Tabular Editor and Default Rules
      run: |
        $path = "${{ github.workspace }}"                      
        $tempPath = "$path\_temp"
        $toolPath = "$path\_tools\TE"
        New-Item -ItemType Directory -Path $tempPath -ErrorAction SilentlyContinue | Out-Null
        
        Write-Host "Downloading Tabular Editor binaries"
        $downloadUrl = "https://github.com/TabularEditor/TabularEditor/releases/latest/download/TabularEditor.Portable.zip"
        $zipFile = "$tempPath\TabularEditor.zip"
        Invoke-WebRequest -Uri $downloadUrl -OutFile $zipFile
        Expand-Archive -Path $zipFile -DestinationPath $toolPath -Force

        Write-Host "Downloading Dataset default rules"
        $downloadUrl = "https://raw.githubusercontent.com/microsoft/Analysis-Services/master/BestPracticeRules/BPARules.json"
        Invoke-WebRequest -Uri $downloadUrl -OutFile "$tempPath\Rules-Dataset.json"
      shell: pwsh

    - name: Run Dataset Rules
      run: |
        $path = "${{ github.workspace }}"
        $tempPath = "$path\_temp"
        $toolPath = "$path\_Tools\TE\TabularEditor.exe"
        $rulesPath = "$path\Rules-Dataset.json"

        if (!(Test-Path $rulesPath)) {
            Write-Host "Running downloaded rules"
            $rulesPath = "$tempPath\Rules-Dataset.json"
        }

        $itemsFolders = Get-ChildItem -Path $path -recurse -include ("*.pbidataset", "*.pbism")

        foreach ($itemFolder in $itemsFolders) {
            $itemPath = "$($itemFolder.Directory.FullName)\definition"

            if (!(Test-Path $itemPath)) {
                $itemPath = "$($itemFolder.Directory.FullName)\model.bim"

                if (!(Test-Path $itemPath)) {
                    throw "Cannot find semantic model definition."
                }
            }

            Write-Host "Running rules for: '$itemPath'"

            Start-Process -FilePath "$toolPath" -ArgumentList """$itemPath"" -A ""$rulesPath"" -V" -NoNewWindow -Wait
        }
      shell: pwsh
